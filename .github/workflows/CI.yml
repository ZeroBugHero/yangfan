name: CI

on:
  push:
    branches:
      - main
      - dev
    tags:
      - '*'

env:
  REGISTRY: yangfanz/
  ALIYUN_REGISTRY: registry.cn-hangzhou.aliyuncs.com/yangfanz/
  IMAGE_NAME_SERVER: server
  IMAGE_NAME_TIMER: timer
  IMAGE_NAME_MASTER: master
  IMAGE_NAME_WORK: work
  IMAGE_NAME_WEB: web
  IMAGE_NAME_RUN: run
  IMAGE_TAG: v1.${{ github.run_number }}

jobs:
  set-image-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Check if tag event
        id: check_tag
        run: echo ::set-output name=is_tag::$(echo "${{ github.ref }}" | grep -E '^refs/tags/')

      - name: Set IMAGE_TAG
        if: steps.check_tag.outputs.is_tag == 'true'
        run: |
          TAG=$(echo "${{ github.ref }}" | sed -e 's|^refs/tags/||')
          echo "::set-output name=IMAGE_TAG::${TAG}"

      - name: Show IMAGE_TAG
        run: echo "IMAGE_TAG is ${{ env.IMAGE_TAG }}"

      - name: Modify env variables
        if: steps.check_tag.outputs.is_tag != 'true'
        run: |
          echo "::set-output image_name_server=${{ env.IMAGE_NAME_SERVER }}-debug" 
          echo "::set-output IMAGE_NAME_TIMER=${{ env.IMAGE_NAME_TIMER }}-debug" 
          echo "::set-output IMAGE_NAME_MASTER=${{ env.IMAGE_NAME_MASTER }}-debug" 
          echo "::set-output IMAGE_NAME_WORK=${{ env.IMAGE_NAME_WORK }}-debug" 
          echo "::set-output IMAGE_NAME_WEB=${{ env.IMAGE_NAME_WEB }}-debug" 
          echo "::set-output IMAGE_NAME_RUN=${{ env.IMAGE_NAME_RUN }}-debug" 
  test-name:
    needs: set-image-tag
    name: Building a server image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME_SERVER: ${{ needs.set-image-tag.outputs.image_name_server }}
    steps:
      - name: Use modified IMAGE_NAME_SERVER
        run: echo "Using modified IMAGE_NAME_SERVER: $IMAGE_NAME_SERVER"
  server:
    needs: set-image-tag
    name: Building a server image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME_SERVER: ${{ needs.set-image-tag.outputs.IMAGE_NAME_SERVER }}
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push Docker image
        run: |
          docker build -t server -f server/Dockerfile .
          docker tag server ${{ env.REGISTRY }}$IMAGE_NAME_SERVER:$TAG
          docker tag server ${{ env.REGISTRY }}$IMAGE_NAME_SERVER :latest
          docker push ${{ env.REGISTRY }}$IMAGE_NAME_SERVER:$TAG
          docker push ${{ env.REGISTRY }}$IMAGE_NAME_SERVER :latest

      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_SERVER
          username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}
      - name: Push to Aliyun Docker image
        run: |
          docker tag server ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_SERVER:$TAG
          docker tag server ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_SERVER:latest
          docker push ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_SERVER:$TAG
          docker push ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_SERVER:latest

  timer:
    needs: set-image-tag
    name: Building a timer image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME_TIMER: ${{ needs.set-image-tag.outputs.IMAGE_NAME_TIMER }}
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push Docker image
        run: |
          docker build -t timer -f timer/Dockerfile .
          docker tag timer ${{ env.REGISTRY }}$IMAGE_NAME_TIMER:$TAG
          docker tag timer ${{ env.REGISTRY }}$IMAGE_NAME_TIMER:latest
          docker push ${{ env.REGISTRY }}$IMAGE_NAME_TIMER:$TAG
          docker push ${{ env.REGISTRY }}$IMAGE_NAME_TIMER:latest
      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_TIMER
          username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}
      - name: Push to Aliyun Docker image
        run: |
          docker tag timer ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_TIMER:$TAG
          docker tag timer ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_TIMER:latest
          docker push ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_TIMER:$TAG
          docker push ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_TIMER:latest

  master:
    needs: set-image-tag
    name: Building a master image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME_MASTER: ${{ needs.set-image-tag.outputs.IMAGE_NAME_MASTER }}
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push Docker image
        run: |
          docker build -t master -f master/Dockerfile .
          docker tag master ${{ env.REGISTRY }}$IMAGE_NAME_MASTER:$TAG
          docker tag master ${{ env.REGISTRY }}$IMAGE_NAME_MASTER:latest
          docker push ${{ env.REGISTRY }}$IMAGE_NAME_MASTER:$TAG
          docker push ${{ env.REGISTRY }}$IMAGE_NAME_MASTER:latest
      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_MASTER
          username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}
      - name: Push to Aliyun Docker image
        run: |
          docker tag master ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_MASTER:$TAG
          docker tag master ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_MASTER:latest
          docker push ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_MASTER:$TAG
          docker push ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_MASTER:latest

  work:
    needs: set-image-tag
    name: Building a work image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME_WORK: ${{ needs.set-image-tag.outputs.IMAGE_NAME_WORK }}
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push Docker image
        run: |
          docker build -t work -f work/Dockerfile .
          docker tag work ${{ env.REGISTRY }}$IMAGE_NAME_WORK:$TAG
          docker tag work ${{ env.REGISTRY }}$IMAGE_NAME_WORK:latest
          docker push ${{ env.REGISTRY }}$IMAGE_NAME_WORK:$TAG
          docker push ${{ env.REGISTRY }}$IMAGE_NAME_WORK:latest
      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_WORK
          username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}
      - name: Push to Aliyun Docker image
        run: |
          docker tag work ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_WORK:$TAG
          docker tag work ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_WORK:latest
          docker push ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_WORK:$TAG
          docker push ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_WORK:latest

  run:
    needs: set-image-tag
    name: Building a run image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME_RUN: ${{ needs.set-image-tag.outputs.IMAGE_NAME_RUN }}
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push Docker image
        run: |
          docker build -t run -f run/Dockerfile .
          docker tag run ${{ env.REGISTRY }}$IMAGE_NAME_RUN:$TAG
          docker tag run ${{ env.REGISTRY }}$IMAGE_NAME_RUN:latest
          docker push ${{ env.REGISTRY }}$IMAGE_NAME_RUN:$TAG
          docker push ${{ env.REGISTRY }}$IMAGE_NAME_RUN:latest
      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_RUN
          username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}
      - name: Push to Aliyun Docker image
        run: |
          docker tag run ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_RUN:$TAG
          docker tag run ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_RUN:latest
          docker push ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_RUN:$TAG
          docker push ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_RUN:latest


  web:
    needs: set-image-tag
    name: Building a web image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME_WEB: ${{ needs.set-image-tag.outputs.IMAGE_NAME_WEB }}
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push Docker image
        run: |
          docker build -t web -f ./web/Dockerfile .
          docker tag web ${{ env.REGISTRY }}$IMAGE_NAME_WEB:$TAG
          docker tag web ${{ env.REGISTRY }}$IMAGE_NAME_WEB:latest
          docker push ${{ env.REGISTRY }}$IMAGE_NAME_WEB:$TAG
          docker push ${{ env.REGISTRY }}$IMAGE_NAME_WEB:latest
      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_WEB
          username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}
      - name: Push to Aliyun Docker image
        run: |
          docker tag web ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_WEB:$TAG
          docker tag web ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_WEB:latest
          docker push ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_WEB:$TAG
          docker push ${{ env.ALIYUN_REGISTRY }}$IMAGE_NAME_WEB:latest
