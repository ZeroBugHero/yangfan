name: CI

on:
  push:
    branches:
      - main
      - dev
    tags:
      - '*'

env:
  REGISTRY: yangfanz/
  ALIYUN_REGISTRY: registry.cn-hangzhou.aliyuncs.com/yangfanz/
  IMAGE_NAME_SERVER: server
  IMAGE_NAME_TIMER: timer
  IMAGE_NAME_MASTER: master
  IMAGE_NAME_WORK: work
  IMAGE_NAME_WEB: web
  IMAGE_NAME_RUN: run
  IMAGE_TAG: v1.${{ github.run_number }}

jobs:
  set_image_tag:
    runs-on: ubuntu-latest
    steps:
      - name: Check if tag event
        id: check_tag
        run: echo ::set-output name=is_tag::$(echo "${{ github.ref }}" | grep -E '^refs/tags/')

      - name: Set IMAGE_TAG
        if: steps.check_tag.outputs.is_tag == 'true'
        run: |
          TAG=$(echo "${{ github.ref }}" | sed -e 's|^refs/tags/||')
          echo "IMAGE_TAG=${TAG}"

      - name: Show IMAGE_TAG
        run: echo "IMAGE_TAG is ${{ env.IMAGE_TAG }}"

      - name: Modify env variables
        if: steps.check_tag.outputs.is_tag != 'true'
        run: |
          echo "IMAGE_NAME_SERVER=${{ env.IMAGE_NAME_SERVER }}-debug" >> "$GITHUB_ENV"
          echo "IMAGE_NAME_TIMER=${{ env.IMAGE_NAME_TIMER }}-debug" >> "$GITHUB_ENV"
          echo "IMAGE_NAME_MASTER=${{ env.IMAGE_NAME_MASTER }}-debug" >> "$GITHUB_ENV"
          echo "IMAGE_NAME_WORK=${{ env.IMAGE_NAME_WORK }}-debug" >> "$GITHUB_ENV"
          echo "IMAGE_NAME_WEB=${{ env.IMAGE_NAME_WEB }}-debug" >> "$GITHUB_ENV"
          echo "IMAGE_NAME_RUN=${{ env.IMAGE_NAME_RUN }}-debug" >> "$GITHUB_ENV"

  server:
    needs: set_image_tag
    name: Building a server image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push Docker image
        run: |
          docker build -t server -f server/Dockerfile .
          docker tag server ${{ env.REGISTRY }}${{ env.IMAGE_NAME_SERVER }}:${{ env.IMAGE_TAG }}
          docker tag server ${{ env.REGISTRY }}${{ env.IMAGE_NAME_SERVER }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}${{ env.IMAGE_NAME_SERVER }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}${{ env.IMAGE_NAME_SERVER }}:${{ env.IMAGE_TAG }}

      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_SERVER }}
          username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}
      - name: Push to Aliyun Docker image
        run: |
          docker tag server ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_SERVER }}:${{ env.IMAGE_TAG }}
          docker tag server ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_SERVER }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_SERVER }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_SERVER }}:${{ env.IMAGE_TAG }}

  timer:
    needs: set_image_tag
    name: Building a timer image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push Docker image
        run: |
          docker build -t timer -f timer/Dockerfile .
          docker tag timer ${{ env.REGISTRY }}${{ env.IMAGE_NAME_TIMER }}:${{ env.IMAGE_TAG }}
          docker tag timer ${{ env.REGISTRY }}${{ env.IMAGE_NAME_TIMER }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}${{ env.IMAGE_NAME_TIMER }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}${{ env.IMAGE_NAME_TIMER }}:${{ env.IMAGE_TAG }}
      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_TIMER }}
          username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}
      - name: Push to Aliyun Docker image
        run: |
          docker tag timer ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_TIMER }}:${{ env.IMAGE_TAG }}
          docker tag timer ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_TIMER }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_TIMER }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_TIMER }}:${{ env.IMAGE_TAG }}

  master:
    needs: set_image_tag
    name: Building a master image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push Docker image
        run: |
          docker build -t master -f master/Dockerfile .
          docker tag master ${{ env.REGISTRY }}${{ env.IMAGE_NAME_MASTER }}:${{ env.IMAGE_TAG }}
          docker tag master ${{ env.REGISTRY }}${{ env.IMAGE_NAME_MASTER }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}${{ env.IMAGE_NAME_MASTER }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}${{ env.IMAGE_NAME_MASTER }}:${{ env.IMAGE_TAG }}
      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_MASTER }}
          username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}
      - name: Push to Aliyun Docker image
        run: |
          docker tag master ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_MASTER }}:${{ env.IMAGE_TAG }}
          docker tag master ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_MASTER }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_MASTER }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_MASTER }}:${{ env.IMAGE_TAG }}

  work:
    needs: set_image_tag
    name: Building a work image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push Docker image
        run: |
          docker build -t work -f work/Dockerfile .
          docker tag work ${{ env.REGISTRY }}${{ env.IMAGE_NAME_WORK }}:${{ env.IMAGE_TAG }}
          docker tag work ${{ env.REGISTRY }}${{ env.IMAGE_NAME_WORK }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}${{ env.IMAGE_NAME_WORK }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}${{ env.IMAGE_NAME_WORK }}:${{ env.IMAGE_TAG }}
      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_WORK }}
          username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}
      - name: Push to Aliyun Docker image
        run: |
          docker tag work ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_WORK }}:${{ env.IMAGE_TAG }}
          docker tag work ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_WORK }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_WORK }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_WORK }}:${{ env.IMAGE_TAG }}

  run:
    needs: set_image_tag
    name: Building a run image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push Docker image
        run: |
          docker build -t run -f run/Dockerfile .
          docker tag run ${{ env.REGISTRY }}${{ env.IMAGE_NAME_RUN }}:${{ env.IMAGE_TAG }}
          docker tag run ${{ env.REGISTRY }}${{ env.IMAGE_NAME_RUN }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}${{ env.IMAGE_NAME_RUN }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}${{ env.IMAGE_NAME_RUN }}:${{ env.IMAGE_TAG }}
      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_RUN }}
          username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}
      - name: Push to Aliyun Docker image
        run: |
          docker tag run ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_RUN }}:${{ env.IMAGE_TAG }}
          docker tag run ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_RUN }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_RUN }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_RUN }}:${{ env.IMAGE_TAG }}


  web:
    needs: set_image_tag
    name: Building a web image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push Docker image
        run: |
          docker build -t web -f ./web/Dockerfile .
          docker tag web ${{ env.REGISTRY }}${{ env.IMAGE_NAME_WEB }}:${{ env.IMAGE_TAG }}
          docker tag web ${{ env.REGISTRY }}${{ env.IMAGE_NAME_WEB }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}${{ env.IMAGE_NAME_WEB }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}${{ env.IMAGE_NAME_WEB }}:${{ env.IMAGE_TAG }}
      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_WEB }}
          username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}
      - name: Push to Aliyun Docker image
        run: |
          docker tag web ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_WEB }}:${{ env.IMAGE_TAG }}
          docker tag web ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_WEB }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_WEB }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.ALIYUN_REGISTRY }}${{ env.IMAGE_NAME_WEB }}:${{ env.IMAGE_TAG }}
